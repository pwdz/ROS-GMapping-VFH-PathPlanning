<launch>
 <node pkg="final_project" type="shortest_distacnce_calculator.py" name="shortest_distacnce_calculator" output="screen" >
  <param name="x_pos" value="-5" />
  <param name="y_pos" value="-7"/>
  <param name="goal_x" value="-4" />
  <param name="goal_y" value="-4"/>
 </node>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="x_pos" default="-8.5"/>
  <arg name="y_pos" default="-8.5"/>
  <arg name="z_pos" default="0.0"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find final_project)/worlds/funky-maze.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <group ns="custom_prefix">
    <rosparam file="$(find final_project)/maps/scenario1-2/map.yaml" />
  </group>

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />
  <!-- <node pkg="final_project" type="monitor.py" name="monitor"></node> -->
  <include file="$(find turtlebot_rviz_launchers)/launch/view_robot.launch"/>
</launch>